package com.cg.question2;

import java.util.TreeSet;
import java.util.function.Predicate;

public class MovieDetailsList {
	
		TreeSet<MovieDetails> treeSet;
		
		public MovieDetailsList() {
			treeSet = new TreeSet<>((arg0,arg1) -> arg0.getMov_Name().compareTo(arg1.getMov_Name()));
		}
		
		public void add(String mov_Name, String lead_actor, String lead_actress, String genre) {
			treeSet.add(new MovieDetails(mov_Name, lead_actor, lead_actress, genre));
		}
		
		public void disp() {
			treeSet.stream().forEach(System.out::println);
		}

		
		public void findByMovieName(String movieName) {
			Predicate<MovieDetails> fetchMovie = (MovieDetails) -> MovieDetails.getMov_Name().equals(movieName);
			treeSet.stream().filter(fetchMovie).forEach(System.out::println);
		}
		
		public void findMovieByGenre(String genre) {
			Predicate<MovieDetails> fetchMovie = (MovieDetails) -> MovieDetails.getGenre().equals(genre);
			treeSet.stream().filter(fetchMovie).forEach(System.out::println);
		}
		
		public void removeMovie(String movieName) {
			Predicate<MovieDetails> fetchMovie = (MovieDetails) -> MovieDetails.getMov_Name().equals(movieName);
			treeSet.removeIf(fetchMovie);
			treeSet.stream().forEach(System.out::println);
		}
		
		public void removeAllMovie() {
			treeSet.removeAll(treeSet);
		}
		
		
	
}



//Comparator<MovieDetails> comparator = (arg0,arg1) -> arg0.getLead_actress().compareTo(arg1.getLead_actress());
//treeSet = new TreeSet<>(comparator);

